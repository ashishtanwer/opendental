using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Xml.Serialization;
//****jordan 2022-10-24-Interface and properties ok here.
//****Not standard pattern. Don't do this elsewhere.
namespace OpenDentBusiness.WebTypes.AutoComm {
	///<summary>This interface is used by the AutoCommProcessor. The AutoCommProcessor makes use of the interfaced properties for eServices automated texting and emails (AutoComm). The properties will Get/Set on the fields for a given AutoCommSent
	///object without the need for type casting or repeating code for each AutoComm type (Reminders, eConfirmations, PatientPortalInvites, etc). Doing so reduces the likelihood of bugs occurring when making changes to the AutoCommProcessor and keeps
	///its code consolidated.</summary>
	public interface IAutoCommSent {
		///<summary>FK to patient.PatNum for the corresponding patient.</summary>
		public long PatNum { get; set; }
		///<summary>FK to clinic.ClinicNum for the corresponding appointment.</summary>
		public long ClinicNum { get; set; }
		///<summary>Contact information used for sending a message.</summary>
		public string Contact { get; set; }
		///<summary>Indicates status of message.</summary>
		public AutoCommStatus SendStatus { get; set; }
		///<summary></summary>
		public CommType MessageType { get; set; }
		///<summary>The template that will be used when creating the message.</summary>
		public string TemplateMessage { get; set; }
		///<summary>FK to primary key of appropriate table.</summary>
		[XmlIgnore]
		public long MessageFk { get; set; }
		///<summary>Subject of the message.</summary>
		public string Subject { get; set; }
		///<summary>Content of the message.</summary>
		public string Message { get; set; }
		///<summary>Generated by OD. Timestamp when row is created.</summary>
		[XmlIgnore]
		public DateTime DateTimeEntry { get; set; }
		///<summary>DateTime the message was sent.</summary>
		[XmlIgnore]
		public DateTime DateTimeSent{ get; set; }
		///<summary>Generated by OD in some cases and HQ in others. Any human readable error message generated by either HQ or EConnector. Used for debugging.</summary>
		public string ResponseDescript{ get; set; }
		///<summary>FK to apptreminderrule.ApptReminderRuleNum. Allows us to look up the rules to determine how to send this apptcomm out.</summary>
		public long ApptReminderRuleNum{ get; set; }
		///<summary>If true then we need to consider the subject in an autocomm object</summary>
		public bool HasSubject();
		IAutoCommSent Copy();
		#region Obsolete
		//These fields exist for the sole purpose of backward compatibility, as some of the classes derived from AutoCommSent have previously been serialized
		//and sent to HQ in the AutoComm algorithm.

		///<summary>Deprecated.  Use MessageFK and MessageType instead.FK to message table, ex. smstomobile.GuidMessage. Generated at HQ.  References 
		///'Mobile' to limit schema changes, since that field already existed and is serialized for payloads sent to WebServiceMainHQ.  May not necessarily 
		///be an identifier in the smstomobile table, ex. could be an EmailMessage.</summary>
		public string GuidMessageToMobile{ get; set; }

		#endregion
  }

	public interface IAutoCommAppt : IAutoCommSent {
		///<summary>Foreign key to the appointment represented by this AutoCommAppt.</summary>
		public long ApptNum { get; set; }
		///<summary>The Date and time of the original appointment. We need this in case the appointment was moved and needs another reminder sent out.</summary>
		public DateTime ApptDateTime { get; set; }
		///<summary>This was the TSPrior used to send this reminder. </summary>
		[XmlIgnore]
		public TimeSpan TSPrior { get; set; }
		///<summary>A list of CalendarIcsInfo objects. Currently intended to be used by ThankYous, Reminder, and Confirmations for AddToCalendar tag replacements and
		///generating ics files.</summary>
		public List<CalendarIcsInfo> ListCalIcsInfos { get; set; }
	}

	public interface IAutoCommApptGuid : IAutoCommAppt {
		///<summary>Generated by HQ. Identifies this AutoCommGuid in future transactions between HQ and OD.</summary>
		public string ShortGUID { get; set; }
	}

	public interface IAutoCommGuid : IAutoCommSent {
		///<summary>Generated by HQ. Identifies this AutoCommGuid in future transactions between HQ and OD.</summary>
		public string ShortGUID { get; set; }
	}

	///<summary>Conatins the information used to generate CalendarIcs objects and .ics files. Attached as a list to AutoCommAppt objects.</summary>
	public class CalendarIcsInfo {
		public long PatNum;
		public string Title;
		public string Location;
		public long AptNum;
		public DateTime DateStart;
		public DateTime DateEnd;
		public string OfficeEmail;
		public CalMethod Method;

		public CalendarIcsInfo() {

		}
	}
	public enum CalMethod {
		[Description("REQUEST")]
		Request,
		[Description("CANCEL")]
		Cancel,
	}
}
